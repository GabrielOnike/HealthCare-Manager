[{"/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/index.tsx":"1","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/reportWebVitals.ts":"2","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/App.tsx":"3","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/components/login.tsx":"4","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/store.js":"5","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/pages/Home.js":"6","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/bars/footer.js":"7","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/bars/sideBar.tsx":"8","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/routes.tsx":"9","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/pages/appointments/index.tsx":"10","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/pages/users/index.tsx":"11","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/pages/pharmacy/index.tsx":"12","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/pages/chat/index.tsx":"13","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/pages/settings/index.tsx":"14","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/pages/patient/index.tsx":"15","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/pages/accounts/index.tsx":"16","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/components/stats/patientStats.tsx":"17","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/components/stats/revenueStats.tsx":"18","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/components/stats/socialStats.tsx":"19","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/components/stats/upcomingAppointments.tsx":"20"},{"size":1477,"mtime":1625653992089,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1612191248922,"results":"23","hashOfConfig":"22"},{"size":1812,"mtime":1624549726359,"results":"24","hashOfConfig":"22"},{"size":5849,"mtime":1624534026196,"results":"25","hashOfConfig":"22"},{"size":238,"mtime":1616496158917,"results":"26","hashOfConfig":"22"},{"size":2533,"mtime":1625560295994,"results":"27","hashOfConfig":"22"},{"size":127,"mtime":1617119534799,"results":"28","hashOfConfig":"22"},{"size":10432,"mtime":1625145982189,"results":"29","hashOfConfig":"22"},{"size":4581,"mtime":1625146229663,"results":"30","hashOfConfig":"22"},{"size":3040,"mtime":1625146223188,"results":"31","hashOfConfig":"22"},{"size":517,"mtime":1625142109730,"results":"32","hashOfConfig":"22"},{"size":585,"mtime":1625141055183,"results":"33","hashOfConfig":"22"},{"size":528,"mtime":1625144382220,"results":"34","hashOfConfig":"22"},{"size":533,"mtime":1625141932308,"results":"35","hashOfConfig":"22"},{"size":523,"mtime":1625142133569,"results":"36","hashOfConfig":"22"},{"size":524,"mtime":1625145263120,"results":"37","hashOfConfig":"22"},{"size":1980,"mtime":1625488129842,"results":"38","hashOfConfig":"22"},{"size":1941,"mtime":1625497483246,"results":"39","hashOfConfig":"22"},{"size":1905,"mtime":1625488178245,"results":"40","hashOfConfig":"22"},{"size":4613,"mtime":1625559079052,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sk63am",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},"/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/index.tsx",[],"/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/reportWebVitals.ts",[],["95","96"],"/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/App.tsx",["97","98","99","100","101","102","103","104","105","106","107","108","109","110"],"import React from 'react';\nimport { HashRouter, Link, Route, Switch, Redirect, useLocation, withRouter } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n//import logo from './logo-hms.gif';  -- see login component\n\n//image/resources import below  ---  moved to login component\n//import allhealth from './res/images/360-health.jpeg';\n//import tele from './res/images/telehealth.png';\n//import digi from './res/images/digihealth.png';\n\n//component imports below\nimport Routes from './routes';\nimport Login from './components/login';\nimport Home from './pages/Home.js';\nimport Sidebar from './bars/sideBar';\n//other dependency imports below\nimport { connect } from 'react-redux'; // redux import\n//css and render imports below\nimport './App.css';\nimport { render } from '@testing-library/react';\n\n{\n  {/*\nconst Home = () =>{\n  return(\n    <Home/>\n  )\n}\n*/}\n}\n\n//consider using the below instead of <any, any> ... as in \n//<Props & RouteProps, HashRouter, State>\nclass App extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      user: \"john\",\n      navigate: false,\n    };\n  }\n  \n\n\n  render() {\n    // const routing = () => useRoutes(routes);\n//    const pathname = window.location.pathname;\n    // console.log(pathname);\n    \n    return (\n      <HashRouter>\n        {/* <Switch>   \n            <Route path=\"/\" component={Login}> <Login /> </Route>    \n            <Route path=\"/Home\" component={Home}> <Home /> </Route>           \n          </Switch> */}\n          {/* i either use the switch statement above(*\"/\" has to come first ) or the routes comp below */}\n          {/* while using this switch, remeber to uncomment the Home const while commmenting the Home import   */}\n        <Routes/>\n      </HashRouter>\n    )\n  }\n}\n\nexport default App;\n\n\n","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/components/login.tsx",["111","112","113","114","115","116","117","118","119","120","121"],"import React from 'react';\nimport './login.css';\nimport { Form, Button, Jumbotron } from 'react-bootstrap';\n\nimport Home from '../pages/Home';\n//import Patients from '../pages/patient/index';\n\nimport { HashRouter, Link, Route, Switch, Redirect, useHistory, withRouter } from \"react-router-dom\";\nimport Routes from '../routes'; // this mport sometimes causes errors, be weary\n\nimport { render } from '@testing-library/react';\n//import Jumbotron from 'react-bootstrap/Jumbotron';\n\nimport logo from '../logo-hms.gif';\n//image/resources import below\nimport allhealth from '../res/images/360-health.jpeg';\nimport tele from '../res/images/telehealth.png';\nimport digi from '../res/images/digihealth.png';\n\n\n//nterface LoginState {\n//    user: any\n// }\n\n// im adding this to import users state from App.tsx \n// const user: string[] = this.props.user ;\n\n\nclass Login extends React.Component<any, any>{\n  /* constructor(props: any) {\n    super(props);\n    this.state = {\n      user: null,\n      password: null,\n    };\n \n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.goToHome = this.goToHome.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n*/\n     constructor(props: any) {\n        super(props);\n        this.state = {\n          user: \"john\",\n          navigate: false,\n        }\n      }\n\n/* // The HandleSubmit fucntion will be used for authetication later \n   // TO DO !\n  handleSubmit(e: any) {\n    this.setState({ user: e.target.value });\n\n    return (\n      <Home/>\n    );\n  }\n  */\n\n  goToHome = () => {\n    // event-prevent has issues working with typescript. reconfirm before re-use\n    // e.preventDefault(); \n\n    console.log(\"on your way home\");\n    this.setState({ navigate: true });\n    \n    //consider the removal of this return statement because it didnt come in handy for routing\n    // im leaving this tho so reader can see other options for rerouting\n    return ( \n     //   <Route>\n      //    <Route to=\"/\" push={true}> <Home/>  </Route> \n     //   </Route>\n     \n     // this.props.history.push('/Home')     // checkout \n/*\n      <Route>\n       render() {\n      <Redirect to={{ pathname:\"/Home\" }} /> }\n      </Route>\n*/\n/*\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </HashRouter>  */\n      null\n    )\n\n    //cosnider impletenting hook like componentDidUpdate that can also handle login redirect\n\n  };\n\n\n\n\n  render() {\n    // const [user, password] = setState('');\n    // const navigate = () => this.state.navigate;\n    \n    // You have to outline the state condition within this render in order to get redirect to work\n    // also take note that file path here syncs with whats in the Routes file\n    if (this.state.navigate === true ) { return  <Redirect to='/Home'  />  }\n\n    return (\n      <div className=\"App column\" >\n        \n      { /* <header className=\"App-header\" style={{ maxHeight:\"100% !important\"}}> */}\n          <div>\n            <div className='left'>\n              <Jumbotron>\n              <div>\n                <div className=\"jumbotron content\">\n                  <h1>\n                    HEALTHCARE MANAGER\n                  </h1>\n                </div>\n                {/* <div className='Entry-background'>\n                    <img src=\"https://www.ngonike.dev/portrait_gabriel.jpg\" width=\"65%\" height=\"400px\"    />\n                   </div> */}\n                <ul className=\"services-bar\" >\n                  <li id=\"services-bar\">\n                    <img src={allhealth} />\n                    <h4>360 Healthcare Management</h4>\n                  </li>\n                  <li id=\"services-bar\">\n                    <img src={tele} />\n                    <h4>TeleHealth and modern healthcare</h4>\n                  </li>\n                  <li id=\"services-bar\">\n                    <img src={digi} />\n                    <h4> Omnipresent data  </h4>\n                  </li>\n                </ul>\n                <div className=\"services-footer\" >\n                  <h6>Copyright 2021. TransCo Healthcare</h6>\n                </div>\n              </div>\n              </Jumbotron>\n            </div>\n\n\n            <div className='right' style={{ width: '500', height: '1000' }}>\n              <div className='app-logo' style={{ background: 'darkgrey' }}  >\n                <img src={logo} className=\"\" alt=\"logo\" height=\"350\" width=\"250\" />\n              </div>\n              <div>\n                <h2>\n                  LOGIN\n                  </h2>\n                <div>\n                  <div>\n                    <Form className=\"pt-3\">\n                      {/*<label htmlFor=\"name\" >Username </label>*/}\n\n                      <Form.Group className=\"d-flex search-field\" >\n                        <Form.Control type=\"text\" className=\"box h-auto\" id=\"name\" name=\"user\" placeholder=\"username\" /><br />\n                        {/*<label htmlFor=\"name\">Password </label>*/}\n                      </Form.Group><br />\n\n                      <Form.Group>\n                        <Form.Control type=\"password\" className=\"box h-auto\" id=\"id_001\" name=\"password\" placeholder=\"password\" /><br /><br />\n                      </Form.Group>\n\n                      <div className=\"mt-3\">\n                        <Button className=\"btn btn-block btn-primary btn-lg font-weight-bold auth-form-btn\" type=\"button\" onClick={this.goToHome} value=\"SIGN IN\"> SIGN IN  </Button>\n                      </div>\n\n                      { /*{this.state.user && <button>Logout</button>} */}\n                    </Form>\n\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          { /* </header> */}\n\n      </div>\n\n\n\n    );\n  }\n}\n\n// export with withRouter to get the component to work e.g export default withRouter(yourComponent);\nexport default withRouter(Login);\n","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/store.js",[],["122","123"],"/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/pages/Home.js",["124","125","126","127","128","129","130"],"import React from 'react';\n//import App from './App.tsx';\nimport SideBar from '../bars/sideBar';\n// import MiniDrawer from '../bars/sideBar'; //Test later as a standalone part of the sidebar component \n//import Footer from '../bars/footer.js';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\n// import Routes from '../routes';\nimport PatientStats from '../components/stats/patientStats';\nimport RevenueStats from '../components/stats/revenueStats';\nimport SocialStats from '../components/stats/socialStats';\nimport UpcomingAppointments from '../components/stats/upcomingAppointments';\n// import Appointments from '././appointments/index';\n// import Patients from '././patient/index';\n// import Pharmacy from '././pharmacy/index';\nimport { createStyles, makeStyles, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Container, Grid, Theme } from '@material-ui/core';\n    \n//const theme = Theme; \n//@ts-ignore\n//const useStyles = makeStyles((theme: Theme) =>\nconst useStyles = makeStyles((theme) =>\n        createStyles({\n            content: {\n                flexGrow: 1,\n                flexDirection: \"column\",\n                padding: theme.spacing(8),\n                // height: 800,\n                minHeight: '100vh',\n                background: 'rgba(241, 229, 229, 0.4)',\n                borderRadius: '15px',\n                backdropFilter: 'blur(3px)',\n\n            },\n        }),\n    );\n\n\n\nfunction Home() {\n \n          const classes  = useStyles();\n          return (\n            <div style={{background: \"radial-gradient(circle, rgba(169,169,169,1) 3%, rgba(255,235,205,1) 53%, rgba(160,147,129,1) 100%)\" }}>\n            <div className={classes.content}>\n              <p style={{paddingLeft: 20, }}>\n                Welcome to your Dashboard.\n              </p>\n            <Container maxWidth={false}>\n              <Grid container spacing={3}>\n\n                <Grid item lg={4} sm={6} xl={3} xs={12} >\n                    <PatientStats/>\n                </Grid>\n\n                <Grid item lg={4} sm={6} xl={3} xs={12} >\n                    <RevenueStats/>\n                </Grid>\n\n                <Grid item lg={4} sm={6} xl={3} xs={12} >\n                     <SocialStats/>\n                </Grid>  \n\n                <Grid item lg={8} sm={12} xl={9} xs={12}>\n                      <UpcomingAppointments/>\n                </Grid>\n\n              </Grid>\n            </Container>\n\n            </div>\n           </div>\n          );\n        }\n      \n\n//export{};\nexport default Home; ","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/bars/footer.js",[],["131","132"],"/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/bars/sideBar.tsx",["133","134","135","136","137","138","139","140","141","142","143","144","145","146"],"import React from 'react';\nimport clsx from 'clsx';\nimport { createStyles, makeStyles, useTheme, Theme } from '@material-ui/core/styles';\nimport { Link as Mlink, Drawer, AppBar, Toolbar, List, CssBaseline, Typography, Divider, IconButton, ListItem, ListItemIcon, ListItemText, } from '@material-ui/core';\nimport { ListItemProps } from '@material-ui/core/ListItem'; //imported to get ListItem redirect to work - see ReadME for link tutorial\nimport { Link } from 'react-router-dom';\n//import MailIcon from '@material-ui/icons/Mail';  -- this is a sample of how i imported one by one before seeing the light as below\nimport { Menu as MenuIcon, Mail as MailIcon, MoveToInbox as InboxIcon, ChevronLeft as ChevronLeftIcon, ChevronRight as ChevronRightIcon  } from '@material-ui/icons';\n//import { red } from '@material-ui/core/colors';\n//import { white } from 'material-ui/styles/colors';\nimport { LocalPharmacy as LocalPharmacyIcon, LocalHospital as LocalHospitalIcon, Event as EventIcon, People as PeopleIcon, Settings as SettingIcon, Forum as ForumIcon, NoteAdd as NoteAddIcon } from '@material-ui/icons';\n\nimport Routes from '../routes';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\n import Appointments from '../pages/appointments/index';\n import Patients from '../pages/patient/index';\n import Pharmacy from '../pages/pharmacy/index';\n import Settings from '../pages/settings/index';\n import Users from '../pages/users/index';\n import Chat from '../pages/chat/index';\n import Accounts from '../pages/accounts/index';\n\nconst drawerWidth = 240;\n\nconst items = [\n  {\n    id: 0,\n    href: '/pages/patient/index',\n    icon: <LocalHospitalIcon/>,\n    page: `#Patients`,\n    title: 'Patients',\n    active: false,\n  },\n  {\n    id: 1,\n    href: <Redirect to='/Appointments' />,\n    icon: <EventIcon/>,\n    page: `#Appointments`,\n    title: 'Appointments',\n    active: false,\n  },\n  {\n    id: 2,\n    href: '/Pharmacy',\n    icon: <LocalPharmacyIcon/>,\n    page: `#Pharmacy`,\n    title: 'Pharmacy',\n    active: false,\n  },\n  {\n    id: 3,\n    href: '/app/account',\n    icon: <PeopleIcon/>,\n    page: `#Users`,\n    title: 'User',\n    active: false,\n  },\n  {\n    id: 4,\n    href: '/login',\n    icon: <ForumIcon/>,\n    page: `#Chat` ,\n    title: 'Consult',\n    active: false,\n  },\n  {\n    id: 5,\n    href: '/register',\n    icon: <NoteAddIcon/>,\n    page: `#Accounts` ,\n    title: 'Register',\n    active: false,\n  },\n  {\n    id: 6,\n    href: '/app/settings',\n    icon: <SettingIcon/>,\n    page: `#Settings` ,\n    title: 'Settings',\n    active: false,\n  },\n];\n\n//function to display items below --- unused/untested as of now... needs makeActive() to work\n//   const displayItem = (items: any) => {\n//     items.forEach((item: any) => {\n//     if (item.active === true ){\n//       return <Redirect to={item.href} />\n//     } \n//     else {\n//       console.log('nothing to return' );\n//       return null;\n//    }\n//   });\n// };\n\n//this checks the id of the item clicked and stores it in a variable  \n//this goes thru the items array to compare which item is eq === to that variable\n//if it is equal to the variable, the id switches on active to true \n//and then stores the item page as a return route/redirect fn \n//which can be called in any page or route to facilitate switch \n \n// const makeActive = (items: any) => {\n//     items.map(item) = {\n//       ''''\n//     }\n//  }\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      backgroundColor: \"#a09381\",\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      backgroundColor: \"#ffebcd\",\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n      backgroundColor: \"#ffebcd\",\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }),\n);\n\n//the fn below assist in link redirect for listItems... see link tutorial\nfunction ListItemLink(props: ListItemProps<'a', { button?: true }>) {\n  return <ListItem button component=\"a\" {...props} />;\n}\n\n// export default function MiniDrawer(props: typeof items) - consider this for typescript  \nexport default function MiniDrawer() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  // const returnItem = () => {\n  //   items.map(item => {\n  //     return <Redirect to='/Appointments' />;\n  //  }\n  // };\n  \n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            HEALTHCARE MANAGER\n          </Typography>\n          <div style={{ marginLeft: 'auto', textAlign: \"right\", }}>\n            <Typography >\n              <Link href=\"/\" to=\"/\">\n                Logout\n              </Link>\n            </Typography>\n          </div>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n\n        <Divider />\n        \n          {/* onClick={<Redirect to=\"item.href\" />} */}\n          {/* onClick={()=> item.href} */}\n\n        {/* /The arrays below map the items const and slices 'em to arrange display accordingly*/}\n        <List>\n          {items.slice(0,6).map((item,index) => (\n              //@ts-ignore\n              <ListItemLink href={item.page} >\n                <ListItem button key={item.title} >\n                <ListItemIcon> { item.icon } </ListItemIcon>\n                <ListItemText primary={item.title} />\n                </ListItem>\n              </ListItemLink>\n          ))}\n        </List>\n\n        <div style={{position: 'absolute', bottom: 0, }}>    \n        <Divider />\n        </div>\n        <div style={{position: 'absolute', bottom: 0, left: 0, }}>\n        <List >\n          { items.slice(6,8).map((item, index) => (\n             //@ts-ignore\n             <ListItemLink href={item.page} >\n              <ListItem button key={item.title} >\n              <ListItemIcon> { item.icon } </ListItemIcon>\n              <ListItemText>  { item.title } </ListItemText> \n              </ListItem>\n             </ListItemLink>\n          ))}\n        </List>\n        </div>\n      </Drawer>\n       {/* <main className={classes.content}>\n        <div className={classes.toolbar} > */}\n        \n        {/* <div id=\"mainview\"> */}\n             {/* <Routes/> */}\n                      {/* <Switch>\n                        <Route path=\"/pages/appointments/index\" element={ <Appointments/> } />\n                        <Route path=\"/pages/patients/index\" element={ <Patients /> } />\n                        <Route path=\"/pages/pharmacy/index\" element={ <Pharmacy/> } />\n                      </Switch> */}\n            {/* <p>\n            vel. Risus at ultrices mi tempus imperdiet. Semper risus in hendrerit\n          gravida rutrum q\n            </p> */}\n        {/* </div>  */}\n        {/* <Typography paragraph>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\n          ut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum\n          facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in hendrerit\n          gravida rutrum quisque non tellus. Convallis convallis tellus id interdum velit laoreet id\n          donec ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit\n          adipiscing bibendum est ultricies integer quis. Cursus euismod quis viverra nibh cras.\n          Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo quis\n          imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue eget\n          arcu dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\n          donec massa sapien faucibus et molestie ac.\n        </Typography> */}\n\n            {/* </div> */}\n      {/* </main>  */}\n    </div>\n  );\n}\n\n/*\n\nconst sideBar = (props) => {\n    return (\n        <div>\n          <p>i am sidebar</p>\n        </div>\n    );\n}\n\n\nexport default sideBar;\n*/","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/routes.tsx",["147","148","149","150","151"],"import React, { FunctionComponent, Component, Suspense, lazy } from 'react'\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Login from './components/login';\n\nimport Appointments from './pages/appointments/index';\nimport Patients from './pages/patient/index';\nimport Pharmacy from './pages/pharmacy/index';\nimport User from './pages/users/index';\nimport Consult from './pages/chat/index';\nimport Accounts from './pages/accounts/index';\nimport Settings from './pages/settings/index';\n\nimport Sidebar from './bars/sideBar';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n//tried the below to lazy load appointments but i get a suspense error... i've commented it out\n//instead ive decided to use the import fro Appointments above- conside the const below later \n//const Appointments = lazy(() => import('./pages/appointments/index'));\n\n//using useStyles here and callin it in DefaultConatiner was specifially implemented to solve  \n//issue of the drawer covering the page contents\nconst useStyles = makeStyles ({\n  container : {\n    display: 'flex',\n  }\n})\n\n// const classes = useStyles();\n\n function DefaultContainer() {\n  const classes = useStyles();\n    return(\n    <div>\n    <div className={classes.container} >\n       <header >\n        <nav>\n        <Sidebar />\n        </nav>\n      </header>\n        <Route exact path=\"/Home\" component={ Home } />\n  \n        <Route path=\"/Appointments\" component={ Appointments } />\n        <Route path=\"/Patients\" component={ Patients } />\n        <Route path=\"/Pharmacy\" component={ Pharmacy } />\n        <Route path=\"/Users\" component={ User } />\n        <Route path=\"/Chat\" component={ Consult } />\n        <Route path=\"/Accounts\" component={ Accounts } />\n        <Route path=\"/Settings\" component={ Settings } />\n    </div>\n    </div>\n    )\n }\n\n const LoginContainer = () => (\n        <div className=\"container\">\n        <Route path=\"/\" component={Login} />\n        </div>\n  )\n\nexport default function Routes() {\n    // render() {\n        // const pathname = window.location.pathname; deprectaed after file restructure\n        return (\n            <HashRouter>\n                <Switch>\n              \n                <Route exact path=\"/\" component={LoginContainer}/>\n                <Route component={DefaultContainer}/>\n                \n              </Switch>\n            </HashRouter> \n        )\n    // }\n}\n\n//INITIAL ROUTES COMPONENT - had to retsurtcure to DefaultContainer and LoginCOntainer\n// in order to get SIdeBar to display on only certain routes... see initial below \n//also, see link in ReadMe for tutorial link\n//\n// export default class Routes extends Component {\n//     render() {\n//         // const pathname = window.location.pathname; deprectaed after file restructure\n//         return (\n//             <HashRouter>\n//                 <Switch>\n              \n//                     <Route exact path=\"/Home\" component={ Home } />\n  \n//                     <Route path=\"/Appointments\" component={ Appointments } />\n//                     <Route path=\"/Patients\" component={ Patients } />\n//                     <Route path=\"/Pharmacy\" component={ Pharmacy } />\n//                     <Route path=\"/pages/user/index\" component={ User } />\n//                     <Route path=\"/pages/chat/index\" component={ Consult } />\n//                     <Route path=\"/pages/register/index\" component={ Register } />\n//                     <Route path=\"/pages/settings/index\" component={ Settings } />\n\n//                   {/* remember! empty/main path \"/\" ought to come last to avoid page screen freeze or pages not showing up */}\n//                     <Route path=\"/\" component={ Login }  /> \n//               </Switch>\n//             </HashRouter> \n//         )\n//     }\n// }\n\n// The below uses features on beta reactrouterdom v6 hence a switch bak to more stable ways\n// uses api call features like Outlet and Navigate in the v6 and in app.tsx for easier routing\n// consider in future updates/release\n// export const routes = [\n//     {\n//         path: 'app',\n//         element: <Home />,\n//         children: [\n//           { path: 'patient', element: <Patients /> },\n//           { path: 'appointments', element: <Appointments /> },\n//           { path: 'pharmacy', element: <Pharmacy /> },\n//           { path: 'user', element: <User /> },\n//           { path: 'consult', element: <Consult /> },\n//           { path: 'register', element: <Register /> },\n//           { path: 'settings', element: <Settings /> },\n//         ]\n//       }\n\n// ];\n\n","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/pages/appointments/index.tsx",["152","153","154"],"import React, { Component } from 'react'\n// import Sidebar from '../../bars/sideBar';\n// import MiniDrawer from '../../bars/sideBar'; // using this fn before the content still failed to flex the content that hides behind the drawer\nimport { createStyles, makeStyles, useTheme, Theme, MuiThemeProvider } from '@material-ui/core/styles';\n// import Drawer from '@material-ui/core';\n// import { withStyles } from '@material-ui/styles';\n// import PropTypes from 'prop-types';\n\n\n\n// const Minidrawer = (props: any) => MiniDrawer();\n// const drawerWidth = 140;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    // root: {\n    //   display: 'flex',\n    // },\n    // toolbar: {\n    //   display: 'flex',\n    //   alignItems: 'center',\n    //   justifyContent: 'flex-end',\n    //   padding: theme.spacing(0, 1),\n    //   // necessary for content to be below app bar\n    //   ...theme.mixins.toolbar,\n    // },\n    content: {\n      // display: 'align',\n      // position: 'relative',\n      flexGrow: 1,\n      padding: theme.spacing(8 ),\n      // ...theme.mixins.toolbar,\n      //  minWidth: 100,\n      //  zIndex: theme.zIndex.drawer - 1,\n    },\n  }),\n); \n\n\n// type AppointmentsState = {\n//   drawerOpen: true,\n// }\n\n//below is the ts version of the component\n// export default function Appointments({ drawerOpen }: AppointmentsState)\nexport default function Appointments() {\n        const classes  = useStyles();\n\n        return (\n            // <div className={classes.root} >\n            <main className={classes.content} > \n              {/* style={contentStyle}  */}\n              \n            {/* <div className={classes.toolbar} >  */}\n           \n        \n            <div id=\"mainview\"> \n            <div>\n            \n                <p> Hi from Appointmetns ! olore magna aliqua. Rhoncus dolor purus non enim praesent elementum\n          facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in hendrerit\n          gravida rutrum quisque non tellus. Convallis convallis tellus id interdum velit laoreet id\n          donec ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit\n          adipiscing bibendum est ultric </p>\n             \n            </div>\n            </div>\n               \n\n            {/* </div> */}\n            </main>\n            // </div>\n        )\n    }\n\n\n// //@ts-ignore\n// Appointments.propTypes = {\n//     classes: PropTypes.object.isRequired,\n//   };\n\n\n// BELOW is a failed sasmple implementation for adjusting drawer compoennt \n// In hindsight, this may have been better in the Routes or App files\n//\n// export default function Appointments() {\n//   const classes  = useStyles();\n  // const theme  = useTheme();\n  // const theme = ((theme: Theme)  => useTheme());  - ts theme call sample\n\n  // const contentStyle = { transition: 'margin-left 450ms cubic-bezier(0.23, 1, 0.32, 1)' };\n  // const Minidrawer = ( props: any) => MiniDrawer();\n  // if (drawerOpen) {\n  //   // @ts-ignore\n  //   contentStyle.marginLeft = 256;\n  // }\n  // return ()\n  // ...","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/pages/users/index.tsx",[],"/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/pages/pharmacy/index.tsx",[],"/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/pages/chat/index.tsx",[],"/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/pages/settings/index.tsx",[],"/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/pages/patient/index.tsx",[],"/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/pages/accounts/index.tsx",[],"/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/components/stats/patientStats.tsx",["155"],"import React from 'react'\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nimport { Avatar, Box, Card, CardContent, Grid, Typography, colors, makeStyles, Theme } from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\n\n\n\n// interface Props {\n   \n// }\n\nconst useStyles = makeStyles((theme: Theme) => ({\n      root:{\n        height: '100%',\n      },\n      differenceIcon: {\n        color: colors.green[900]\n      },\n      differenceValue: {\n        color: colors.green[900],\n        marginRight: theme.spacing(1)\n      },\n    })\n  );\n\nconst PatientStats = ({ ...rest }) => {\n    const classes = useStyles();\n\n    return (\n        <Card className={clsx(classes.root)} {...rest} >\n            <CardContent>\n              <Grid container justify=\"space-between\" spacing={3}>\n\n                <Grid item>\n                  <Typography color=\"textSecondary\"  gutterBottom variant=\"h6\" >\n                    REGISTERED PATIENTS\n                  </Typography>\n                  <Typography color=\"textPrimary\"  variant=\"h4\"  >\n                    1,520\n                  </Typography>\n                  </Grid>\n\n                  <Box\n                    mt={2}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                  >\n                    <ArrowUpwardIcon className={classes.differenceIcon} />\n                    <Typography\n                      className={classes.differenceValue}\n                      variant=\"body2\"\n                    >\n                      12%\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"caption\"\n                    >\n                      Since last month\n                    </Typography>\n                  </Box>\n\n              </Grid>\n            </CardContent>\n        </Card>\n    )\n}\n\nPatientStats.propTypes = {\n  className: PropTypes.string\n};\n\nexport default PatientStats\n","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/components/stats/revenueStats.tsx",["156","157","158"],"import React, { ReactElement } from 'react'\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nimport { Avatar, Box, Card, CardContent, Grid, Typography, colors, makeStyles, Theme } from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\n\ninterface Props {\n    \n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root:{\n      height: '100%',\n    },\n    differenceIcon: {\n      color: colors.green[900]\n    },\n    differenceValue: {\n      color: colors.green[900],\n      marginRight: theme.spacing(1)\n    },\n  })\n);\n\nfunction RevenueStats({}: Props): ReactElement {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Card className={clsx(classes.root)} >\n            <CardContent>\n              <Grid container justify=\"space-between\" spacing={3}>\n\n                <Grid item>\n                  <Typography color=\"textSecondary\"  gutterBottom variant=\"h6\" >\n                    REVENUE MONTHLY \n                  </Typography>\n                  <Typography color=\"textPrimary\"  variant=\"h4\"  >\n                    NGN 743,000\n                  </Typography>\n                  </Grid>\n\n                  <Box\n                    mt={2}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                  >\n                    <ArrowUpwardIcon className={classes.differenceIcon} />\n                    <Typography\n                      className={classes.differenceValue}\n                      variant=\"body2\"\n                    >\n                      22%\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"caption\"\n                    >\n                      Since last month\n                    </Typography>\n                  </Box>\n\n              </Grid>\n            </CardContent>\n        </Card>\n        </div>\n    )\n}\n\nexport default RevenueStats\n","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/components/stats/socialStats.tsx",["159","160"],"import React from 'react'\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nimport { Avatar, Box, Card, CardContent, Grid, Typography, colors, makeStyles, Theme } from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\n\ninterface Props {\n    \n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root:{\n      height: '100%',\n    },\n    differenceIcon: {\n      color: colors.green[900]\n    },\n    differenceValue: {\n      color: colors.green[900],\n      marginRight: theme.spacing(1)\n    },\n  })\n);\n\nconst SocialStats = (props: Props) => {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Card className={clsx(classes.root)} >\n            <CardContent>\n              <Grid container justify=\"space-between\" spacing={3}>\n\n                <Grid item>\n                  <Typography color=\"textSecondary\"  gutterBottom variant=\"h6\" >\n                    SOCIAL FOLLOWING \n                  </Typography>\n                  <Typography color=\"textPrimary\"  variant=\"h4\"  >\n                    50 \n                  </Typography>\n                  </Grid>\n\n                  <Box\n                    mt={2}\n                    display=\"flex\"\n                    alignItems=\"center\"\n                  >\n                    <ArrowUpwardIcon className={classes.differenceIcon} />\n                    <Typography\n                      className={classes.differenceValue}\n                      variant=\"body2\"\n                    >\n                      5%\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"caption\"\n                    >\n                      Since last month\n                    </Typography>\n                  </Box>\n\n              </Grid>\n            </CardContent>\n        </Card>\n        </div>\n    )\n}\n\nexport default SocialStats\n","/Applications/MAMP/htdocs/electron projects/healthcare-manager/src/components/stats/upcomingAppointments.tsx",["161","162","163","164","165"],"import React,{useState} from 'react'\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { createStyles, makeStyles, } from '@material-ui/core/styles';\nimport { Avatar, Box, Card, CardContent, Grid, Button, CardHeader, Chip, Divider, Table,\n    TableBody, TableCell, TableHead, TableRow, TableSortLabel, Tooltip, } from '@material-ui/core';\n\n\ninterface Props {\n    \n}\n\nconst data = [\n    {\n      patid: 12,\n      ref: 'AP1049',\n      time: 1230,\n      patient: {\n        name: 'Ekaterina Tankova'\n      },\n      booking: {\n        name: 'Dr. Gabe'\n      },\n      status: 'In progress',\n      date: \"2021-12-26\",\n    },\n    {\n        patid: 14,\n        ref: 'AP1049',\n        time: 1430,\n        patient: {\n          name: 'Herman Beck'\n        },\n        booking: {\n          name: 'Dr. Gabe'\n        },\n        status: 'Pending',\n        date: \"2021-12-16\",\n      },\n      {\n        patid: 18,\n        ref: 'AP1049',\n        time: 1600,\n        patient: {\n          name: 'Raji Fash'\n        },\n        booking: {\n          name: 'Dr. Gabe'\n        },\n        status: 'In progress',\n        date: \"2021-12-13\",\n      },\n      {\n        patid: 34,\n        ref: 'AP1049',\n        time: \"2100\",\n        patient: {\n          name: 'Nas Rufa'\n        },\n        booking: {\n          name: 'Dr. Gabe'\n        },\n        status: 'Pending',\n        date: \"2022-03-13\",\n      },\n\n  ];\n\n  const useStyles = makeStyles(() => ({\n    root: {},\n    actions: {\n      justifyContent: 'flex-end'\n    }\n  }));\n\nconst UpcomingAppointments = (props: Props) => {\n    const classes = useStyles();\n    const [upcoming] = useState(data);\n\n    return (\n        <div>\n            <Card className={clsx(classes.root)}  >\n                <CardHeader title=\"Upcoming Appointments\" />\n                <Divider />\n\n                    <Box minWidth={700}>\n                        <Table>\n                         <TableHead>\n                             <TableRow>\n                                <TableCell>\n                                Appointment Ref\n                                </TableCell>\n                                <TableCell>\n                                Patient\n                                </TableCell>\n                                <TableCell sortDirection=\"desc\">\n                                <Tooltip\n                                    enterDelay={300}\n                                    title=\"Sort\"\n                                >\n                                    <TableSortLabel\n                                    active\n                                    direction=\"desc\"\n                                    >\n                                    Appointment \n                                    </TableSortLabel>\n                                </Tooltip>\n                                </TableCell>\n                                <TableCell>\n                                Booking\n                                </TableCell>\n                                <TableCell>\n                                Status\n                                </TableCell>\n                             </TableRow>\n                            </TableHead>\n\n                            <TableBody>\n                            {upcoming.map((upcoming) => (\n                                <TableRow hover key={upcoming.patid} >\n                                    <TableCell>\n                                    {upcoming.ref}\n                                </TableCell>\n                                <TableCell>\n                                    {upcoming.patient.name}\n                                </TableCell>\n                                <TableCell>\n                                    {moment(upcoming.time).format('h:mm a')},\n                                    {moment(upcoming.date).format('dddd Do MMMM')}\n                                </TableCell>\n                                <TableCell>\n                                    {upcoming.booking.name}\n                                </TableCell>\n                                <TableCell>\n                                    <Chip color=\"primary\" label={upcoming.status} size=\"small\" />\n                                </TableCell>\n                                </TableRow>\n                            )\n                            )}\n                            </TableBody>\n\n                        </Table>\n                    </Box>\n            </Card>\n        </div>\n    )\n}\n\nUpcomingAppointments.propTypes = {\n    className: PropTypes.string\n  };\n\nexport default UpcomingAppointments\n",{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":2,"column":22,"nodeType":"172","messageId":"173","endLine":2,"endColumn":26},{"ruleId":"170","severity":1,"message":"174","line":2,"column":28,"nodeType":"172","messageId":"173","endLine":2,"endColumn":33},{"ruleId":"170","severity":1,"message":"175","line":2,"column":35,"nodeType":"172","messageId":"173","endLine":2,"endColumn":41},{"ruleId":"170","severity":1,"message":"176","line":2,"column":43,"nodeType":"172","messageId":"173","endLine":2,"endColumn":51},{"ruleId":"170","severity":1,"message":"177","line":2,"column":53,"nodeType":"172","messageId":"173","endLine":2,"endColumn":64},{"ruleId":"170","severity":1,"message":"178","line":2,"column":66,"nodeType":"172","messageId":"173","endLine":2,"endColumn":76},{"ruleId":"170","severity":1,"message":"179","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":17},{"ruleId":"170","severity":1,"message":"180","line":13,"column":8,"nodeType":"172","messageId":"173","endLine":13,"endColumn":13},{"ruleId":"170","severity":1,"message":"181","line":14,"column":8,"nodeType":"172","messageId":"173","endLine":14,"endColumn":12},{"ruleId":"170","severity":1,"message":"182","line":15,"column":8,"nodeType":"172","messageId":"173","endLine":15,"endColumn":15},{"ruleId":"170","severity":1,"message":"183","line":17,"column":10,"nodeType":"172","messageId":"173","endLine":17,"endColumn":17},{"ruleId":"170","severity":1,"message":"184","line":20,"column":10,"nodeType":"172","messageId":"173","endLine":20,"endColumn":16},{"ruleId":"185","severity":1,"message":"186","line":22,"column":1,"nodeType":"187","messageId":"188","endLine":30,"endColumn":2},{"ruleId":"185","severity":1,"message":"189","line":23,"column":3,"nodeType":"187","messageId":"190","endLine":29,"endColumn":4},{"ruleId":"170","severity":1,"message":"181","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":12},{"ruleId":"170","severity":1,"message":"191","line":8,"column":10,"nodeType":"172","messageId":"173","endLine":8,"endColumn":20},{"ruleId":"170","severity":1,"message":"171","line":8,"column":22,"nodeType":"172","messageId":"173","endLine":8,"endColumn":26},{"ruleId":"170","severity":1,"message":"174","line":8,"column":28,"nodeType":"172","messageId":"173","endLine":8,"endColumn":33},{"ruleId":"170","severity":1,"message":"175","line":8,"column":35,"nodeType":"172","messageId":"173","endLine":8,"endColumn":41},{"ruleId":"170","severity":1,"message":"192","line":8,"column":53,"nodeType":"172","messageId":"173","endLine":8,"endColumn":63},{"ruleId":"170","severity":1,"message":"193","line":9,"column":8,"nodeType":"172","messageId":"173","endLine":9,"endColumn":14},{"ruleId":"170","severity":1,"message":"184","line":11,"column":10,"nodeType":"172","messageId":"173","endLine":11,"endColumn":16},{"ruleId":"194","severity":1,"message":"195","line":124,"column":21,"nodeType":"196","endLine":124,"endColumn":44},{"ruleId":"194","severity":1,"message":"195","line":128,"column":21,"nodeType":"196","endLine":128,"endColumn":39},{"ruleId":"194","severity":1,"message":"195","line":132,"column":21,"nodeType":"196","endLine":132,"endColumn":39},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"197","severity":1,"message":"198","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":15},{"ruleId":"197","severity":1,"message":"191","line":6,"column":10,"nodeType":"172","messageId":"173","endLine":6,"endColumn":20},{"ruleId":"197","severity":1,"message":"175","line":6,"column":22,"nodeType":"172","messageId":"173","endLine":6,"endColumn":28},{"ruleId":"197","severity":1,"message":"174","line":6,"column":30,"nodeType":"172","messageId":"173","endLine":6,"endColumn":35},{"ruleId":"197","severity":1,"message":"176","line":6,"column":37,"nodeType":"172","messageId":"173","endLine":6,"endColumn":45},{"ruleId":"197","severity":1,"message":"199","line":15,"column":36,"nodeType":"172","messageId":"173","endLine":15,"endColumn":52},{"ruleId":"197","severity":1,"message":"200","line":16,"column":27,"nodeType":"172","messageId":"173","endLine":16,"endColumn":32},{"ruleId":"166","replacedBy":"201"},{"ruleId":"168","replacedBy":"202"},{"ruleId":"170","severity":1,"message":"203","line":4,"column":18,"nodeType":"172","messageId":"173","endLine":4,"endColumn":23},{"ruleId":"170","severity":1,"message":"204","line":8,"column":36,"nodeType":"172","messageId":"173","endLine":8,"endColumn":44},{"ruleId":"170","severity":1,"message":"205","line":8,"column":61,"nodeType":"172","messageId":"173","endLine":8,"endColumn":70},{"ruleId":"170","severity":1,"message":"193","line":13,"column":8,"nodeType":"172","messageId":"173","endLine":13,"endColumn":14},{"ruleId":"170","severity":1,"message":"191","line":14,"column":10,"nodeType":"172","messageId":"173","endLine":14,"endColumn":20},{"ruleId":"170","severity":1,"message":"175","line":14,"column":22,"nodeType":"172","messageId":"173","endLine":14,"endColumn":28},{"ruleId":"170","severity":1,"message":"174","line":14,"column":30,"nodeType":"172","messageId":"173","endLine":14,"endColumn":35},{"ruleId":"170","severity":1,"message":"206","line":15,"column":9,"nodeType":"172","messageId":"173","endLine":15,"endColumn":21},{"ruleId":"170","severity":1,"message":"207","line":16,"column":9,"nodeType":"172","messageId":"173","endLine":16,"endColumn":17},{"ruleId":"170","severity":1,"message":"208","line":17,"column":9,"nodeType":"172","messageId":"173","endLine":17,"endColumn":17},{"ruleId":"170","severity":1,"message":"209","line":18,"column":9,"nodeType":"172","messageId":"173","endLine":18,"endColumn":17},{"ruleId":"170","severity":1,"message":"210","line":19,"column":9,"nodeType":"172","messageId":"173","endLine":19,"endColumn":14},{"ruleId":"170","severity":1,"message":"211","line":20,"column":9,"nodeType":"172","messageId":"173","endLine":20,"endColumn":13},{"ruleId":"170","severity":1,"message":"212","line":21,"column":9,"nodeType":"172","messageId":"173","endLine":21,"endColumn":17},{"ruleId":"170","severity":1,"message":"213","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":34},{"ruleId":"170","severity":1,"message":"214","line":1,"column":36,"nodeType":"172","messageId":"173","endLine":1,"endColumn":45},{"ruleId":"170","severity":1,"message":"215","line":1,"column":47,"nodeType":"172","messageId":"173","endLine":1,"endColumn":55},{"ruleId":"170","severity":1,"message":"216","line":1,"column":57,"nodeType":"172","messageId":"173","endLine":1,"endColumn":61},{"ruleId":"170","severity":1,"message":"176","line":2,"column":37,"nodeType":"172","messageId":"173","endLine":2,"endColumn":45},{"ruleId":"170","severity":1,"message":"214","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":26},{"ruleId":"170","severity":1,"message":"217","line":4,"column":36,"nodeType":"172","messageId":"173","endLine":4,"endColumn":44},{"ruleId":"170","severity":1,"message":"199","line":4,"column":53,"nodeType":"172","messageId":"173","endLine":4,"endColumn":69},{"ruleId":"170","severity":1,"message":"218","line":5,"column":10,"nodeType":"172","messageId":"173","endLine":5,"endColumn":16},{"ruleId":"170","severity":1,"message":"179","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":17},{"ruleId":"170","severity":1,"message":"218","line":5,"column":10,"nodeType":"172","messageId":"173","endLine":5,"endColumn":16},{"ruleId":"219","severity":1,"message":"220","line":27,"column":23,"nodeType":"221","messageId":"222","endLine":27,"endColumn":32},{"ruleId":"170","severity":1,"message":"179","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":17},{"ruleId":"170","severity":1,"message":"218","line":5,"column":10,"nodeType":"172","messageId":"173","endLine":5,"endColumn":16},{"ruleId":"170","severity":1,"message":"223","line":5,"column":10,"nodeType":"172","messageId":"173","endLine":5,"endColumn":22},{"ruleId":"170","severity":1,"message":"218","line":6,"column":10,"nodeType":"172","messageId":"173","endLine":6,"endColumn":16},{"ruleId":"170","severity":1,"message":"224","line":6,"column":29,"nodeType":"172","messageId":"173","endLine":6,"endColumn":40},{"ruleId":"170","severity":1,"message":"225","line":6,"column":42,"nodeType":"172","messageId":"173","endLine":6,"endColumn":46},{"ruleId":"170","severity":1,"message":"226","line":6,"column":48,"nodeType":"172","messageId":"173","endLine":6,"endColumn":54},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'useLocation' is defined but never used.","'withRouter' is defined but never used.","'PropTypes' is defined but never used.","'Login' is defined but never used.","'Home' is defined but never used.","'Sidebar' is defined but never used.","'connect' is defined but never used.","'render' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","Nested block is redundant.","redundantNestedBlock","'HashRouter' is defined but never used.","'useHistory' is defined but never used.","'Routes' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'SideBar' is defined but never used.","'MuiThemeProvider' is defined but never used.","'Theme' is defined but never used.",["227"],["228"],"'Mlink' is defined but never used.","'MailIcon' is defined but never used.","'InboxIcon' is defined but never used.","'Appointments' is defined but never used.","'Patients' is defined but never used.","'Pharmacy' is defined but never used.","'Settings' is defined but never used.","'Users' is defined but never used.","'Chat' is defined but never used.","'Accounts' is defined but never used.","'FunctionComponent' is defined but never used.","'Component' is defined but never used.","'Suspense' is defined but never used.","'lazy' is defined but never used.","'useTheme' is defined but never used.","'Avatar' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'createStyles' is defined but never used.","'CardContent' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]